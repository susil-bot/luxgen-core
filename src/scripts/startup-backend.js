#!/usr/bin/env node /** * Complete Backend Startup Script * Initializes MongoDB Atlas connection, creates collections, indexes, and starts the server */ const { connectToMongoDB } = require('../config/mongodb');
const { createDatabaseInitializer } = require('../config/databaseInit');
const logger = require('../utils/logger'); async function startupBackend() { try { console.log('Starting LuxGen Trainer Platform Backend'.rainbow); console.log('='.repeat(60)); // Step 1: Connect to MongoDB Atlas console.log('Step 1: Connecting to MongoDB Atlas...'); await connectToMongoDB(); console.log('MongoDB Atlas connected successfully'); // Step 2: Initialize database console.log('Step 2: Initializing database...'); const dbInitializer = createDatabaseInitializer(); await dbInitializer.initialize(); console.log('Database initialized successfully'); // Step 3: Check initialization status console.log('Step 3: Verifying initialization...'); const initStatus = await dbInitializer.isInitialized(); console.log('Initialization Status:', initStatus); // Step 4: Start the main server console.log('Step 4: Starting Express server...'); const app = require('../index'); console.log('\n'+ '='.repeat(60)); console.log('BACKEND STARTUP COMPLETED SUCCESSFULLY!'.green); console.log('='.repeat(60)); console.log('Available Endpoints:'); console.log('• Health Check: http://localhost:3001/health'); console.log('• Database Status: http://localhost:3001/api/database/status'); console.log('• MongoDB Status: http://localhost:3001/api/mongodb/status'); console.log('• API Documentation: http://localhost:3001/api/docs'); console.log('• Auth API: http://localhost:3001/api/v1/auth/v2'); console.log('• Users API: http://localhost:3001/api/v1/users/v2'); console.log('• Tenants API: http://localhost:3001/api/v1/tenants/v2'); console.log('='.repeat(60)); console.log('Test Commands:'); console.log('• Run API Tests: node src/scripts/api-test-suite.js'); console.log('• Test MongoDB: node src/scripts/test-mongodb-connection.js'); console.log('='.repeat(60)); } catch (error) { console.error('Backend startup failed:', error); console.error('Stack trace:', error.stack); process.exit(1); }
} // Handle graceful shutdown
process.on('SIGINT', () => { console.log('\n Received SIGINT, shutting down gracefully...'); process.exit(0);
}); process.on('SIGTERM', () => { console.log('\n Received SIGTERM, shutting down gracefully...'); process.exit(0);
}); // Run startup
if (require.main === module) { startupBackend();
} module.exports = startupBackend;
