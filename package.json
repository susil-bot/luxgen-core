{
  "name": "luxgen-core",
  "version": "1.0.0",
  "description": "LuxGen Core Backend with Hapi.js Architecture and Multi-Tenancy",
  "main": "src/index.js",
  "scripts": {
    "start": "node src/index.js",
    "start:production": "NODE_ENV=production node src/index.js",
    "start:development": "NODE_ENV=development node src/index.js",
    "dev": "nodemon src/index.js",
    "dev:production": "NODE_ENV=production nodemon src/index.js",
    "dev:development": "NODE_ENV=development nodemon src/index.js",
    "build": "npm run build:netlify",
    "build:netlify": "npm run build:production",
    "build:production": "NODE_ENV=production npm run build:dist",
    "build:development": "NODE_ENV=development npm run build:dist",
    "build:dist": "mkdir -p dist && cp -r src dist/ && cp -r netlify dist/ && cp package.json dist/ && cp package-lock.json dist/ && cp netlify.toml dist/",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "lint:ci": "eslint src/ --format json --output-file eslint-report.json",
    "setup:database": "node src/scripts/setup-multi-tenant.js",
    "setup:development": "NODE_ENV=development npm run setup:database",
    "setup:production": "NODE_ENV=production npm run setup:database",
    "init:database": "node src/scripts/init-database.js",
    "init:development": "NODE_ENV=development npm run init:database",
    "init:production": "NODE_ENV=production npm run init:database",
    "deploy:netlify": "npm run build:production && netlify deploy --prod --dir=dist",
    "deploy:development": "npm run build:development && netlify deploy --dir=dist",
    "docker:build": "docker build -t luxgen-backend .",
    "docker:run": "docker run -p 3000:3000 luxgen-backend",
    "docker:dev": "docker-compose up backend",
    "docker:prod": "docker-compose --profile production up",
    "docker:monitoring": "docker-compose --profile monitoring up",
    "health": "curl -f http://localhost:3000/health || exit 1",
    "pre-commit": "npm run lint && npm run test",
    "deploy:netlify": "netlify deploy --prod --dir=dist",
    "deploy:preview": "netlify deploy --dir=dist",
    "cursor:test": "node scripts/test-cursor-review.js",
    "cursor:config": "echo 'Code quality review configuration available in .cursor-review.yml'"
  },
  "dependencies": {
    "@hapi/good": "^9.0.0",
    "@hapi/good-console": "^8.0.0",
    "@hapi/good-squeeze": "^5.0.0",
    "@hapi/hapi": "^21.3.0",
    "@hapi/inert": "^7.1.0",
    "@hapi/joi": "^17.1.1",
    "@hapi/vision": "^6.0.1",
    "bcryptjs": "^2.4.3",
    "chai": "^4.3.10",
    "compression": "^1.8.1",
    "connect-mongo": "^5.0.0",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^8.1.0",
    "express-session": "^1.17.3",
    "helmet": "^7.2.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.0.3",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^7.0.9",
    "serverless-http": "^3.2.0",
    "supertest": "^6.3.3",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@babel/core": "^7.23.0",
    "@babel/preset-env": "^7.23.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.10.0",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^6.13.0",
    "@typescript-eslint/parser": "^6.13.0",
    "babel-jest": "^29.7.0",
    "eslint": "^8.57.1",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.0",
    "typescript": "^5.3.0"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "keywords": [
    "hapi",
    "express",
    "mongodb",
    "multi-tenant",
    "api",
    "backend",
    "typescript",
    "validation",
    "testing"
  ],
  "author": "LuxGen Team",
  "license": "MIT"
}
