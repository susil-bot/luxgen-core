name: 🚀 LuxGen Backend Deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Code Quality & Testing
  quality-checks:
    name: 🔍 Code Quality & Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧹 Run linting
        run: npm run lint || echo "Linting completed with warnings"

      - name: 🧪 Run tests
        run: npm test

      - name: 🔒 Security audit
        run: npm audit --audit-level=moderate || echo "Security audit completed"

      - name: 🏗️ Build check
        run: npm run build:netlify

  # Docker Build & Push
  docker-build:
    name: 🐳 Docker Build & Push
    runs-on: ubuntu-latest
    needs: quality-checks
    if: github.event_name == 'push'
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build:netlify

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🐳 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Netlify Deployment
  netlify-deploy:
    name: 🌐 Netlify Deployment
    runs-on: ubuntu-latest
    needs: quality-checks
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for Netlify
        run: npm run build:netlify

      - name: 🚀 Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - ${{ github.sha }}"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: 🧪 Test Netlify deployment
        run: |
          echo "Testing Netlify deployment..."
          sleep 30  # Wait for deployment to be ready
          curl -f https://luxgen-backend.netlify.app/health || echo "Health check failed, but deployment may still be processing"

  # Deployment Summary
  deployment-summary:
    name: 📊 Deployment Summary
    runs-on: ubuntu-latest
    needs: [quality-checks, docker-build, netlify-deploy]
    if: always()
    
    steps:
      - name: 📋 Generate deployment summary
        run: |
          echo "## 🚀 LuxGen Backend Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Build Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Quality Checks**: ${{ needs.quality-checks.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Docker Build**: ${{ needs.docker-build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Netlify Deploy**: ${{ needs.netlify-deploy.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "### 🌐 Production URLs" >> $GITHUB_STEP_SUMMARY
            echo "- **Netlify Backend**: https://luxgen-backend.netlify.app" >> $GITHUB_STEP_SUMMARY
            echo "- **Health Check**: https://luxgen-backend.netlify.app/health" >> $GITHUB_STEP_SUMMARY
            echo "- **Docker Image**: ghcr.io/${{ github.repository }}:latest" >> $GITHUB_STEP_SUMMARY
          else
            echo "### 🔄 Development Branch" >> $GITHUB_STEP_SUMMARY
            echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Docker Image**: ghcr.io/${{ github.repository }}:${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Deployment Methods" >> $GITHUB_STEP_SUMMARY
          echo "1. **Netlify (Serverless)**: Automatic deployment for main branch" >> $GITHUB_STEP_SUMMARY
          echo "2. **Docker (Container)**: Available for any deployment platform" >> $GITHUB_STEP_SUMMARY
          echo "3. **Manual**: Use Docker image for custom deployments" >> $GITHUB_STEP_SUMMARY
